- hosts: all
  become: true
  tasks:
  # sshfs
  - template:
      src: epel.repo
      dest: /etc/yum.repos.d/epel.repo
  - yum:
      name: sshfs
      state: latest
  - lineinfile:
      dest: /etc/fuse.conf
      regexp: "# user_allow_other"
      line: "user_allow_other"

  # go
  - file:
      path: /home/vagrant/go
      state: directory
    become_user: vagrant
  - file:
      path: /home/vagrant/go/src/github.com
      state: directory
    become_user: vagrant
  - file:
      path: /home/vagrant/go/bin
      state: directory
    become_user: vagrant

  - yum:
      name: git
      state: latest
  - yum:
      name: bzr
      state: latest
  - yum:
      name: rpm
      state: latest
  - yum:
      name: xz
      state: latest

  - lineinfile:
      state: present
      create: yes
      dest: /home/vagrant/.bashrc
      line: 'export GOPATH=/home/vagrant/go'
  - lineinfile:
      state: present
      create: yes
      dest: /home/vagrant/.bashrc
      line: 'export PATH=$PATH:$GOPATH/bin'
  - yum:
      name: go
      state: latest

  - shell: "go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway"
    environment:
      GOPATH: "/home/vagrant/go"
    become_user: vagrant
  - shell: "go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger"
    environment:
      GOPATH: "/home/vagrant/go"
    become_user: vagrant
  - shell: "go get -u github.com/golang/protobuf/protoc-gen-go"
    environment:
      GOPATH: "/home/vagrant/go"
    become_user: vagrant

  - file:
      path: /home/vagrant/go/src/github.com/coreos
      state: directory
    become_user: vagrant
  - file:
      src: /home/vagrant/code/clair
      dest: /home/vagrant/go/src/github.com/coreos/clair
      owner: vagrant
      state: link
    become_user: vagrant
  - file:
      path: /home/vagrant/go/src/github.com/grafeas
      state: directory
    become_user: vagrant
  - file:
      src: /home/vagrant/code/grafeas
      dest: /home/vagrant/go/src/github.com/grafeas/grafeas
      owner: vagrant
      state: link
    become_user: vagrant

  - name: install postgresql-9.6
    yum:
      name: https://yum.postgresql.org/9.6/redhat/rhel-7.3-x86_64/pgdg-centos96-9.6-3.noarch.rpm
      state: present
  - yum:
      name: postgresql96
      state: latest
  - yum:
      name: postgresql96-server
      state: latest
  - yum:
      name: postgresql96-libs
      state: latest
  - yum:
      name: postgresql96-contrib
      state: latest
  - yum:
      name: postgresql96-devel
      state: latest
  - stat:
      path: /var/lib/pgsql/9.6/data/pg_hba.conf
    register: pgsql96
  - command: "/usr/pgsql-9.6/bin/postgresql96-setup initdb"
    when: pgsql96.stat.exists == False
  - lineinfile:
      dest: /var/lib/pgsql/9.6/data/pg_hba.conf
      regexp: "local   all             all                                     peer"
      line:   "local   all             all                                     trust"
  - lineinfile:
      dest: /var/lib/pgsql/9.6/data/pg_hba.conf
      regexp: "host    all             all             127.0.0.1/32            ident"
      line:   "host    all             all             127.0.0.1/32            trust"
  - lineinfile:
      dest: /var/lib/pgsql/9.6/data/pg_hba.conf
      regexp: "host    all             all             ::1/128                 ident"
      line:   "host    all             all             ::1/128                 trust"
  - service:
      name: postgresql-9.6
      state: restarted

  # docker
  - yum:
      name: docker
      state: latest
  - group:
      name: docker
      state: present
  - user:
      name: vagrant
      groups: docker
      append: yes
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa
  - lineinfile:
      dest: /etc/sysconfig/docker
      regexp: "OPTIONS='--selinux-enabled --log-driver=journald'"
      line: "OPTIONS='--selinux-enabled -G docker --log-driver=journald'"
  - service:
      name: docker
      state: restarted

#tar -C /usr/local -xzf go1.10.linux-amd64.tar.gz
#export PATH=/usr/local/go/bin:$PATH
#go get -u github.com/derekparker/delve/cmd/dlv

